<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.3.xsd">

<!-- Connection Pool 관련 Bean 구성: HikariCP -->

<!-- 방법1: JDBC 정보를 직접 설정 -->
<!-- 1. JDBC 설정 정보가 설정된 HikariConfig 빈 생성--> 
     <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
        <!-- 접속 시 사용되는 JDBC 클래스 전체 이름 -->
        <property name="driverClassName" value="oracle.jdbc.OracleDriver"></property>
        <!-- 접속하려는 RDBMS 서비스의 네트워크 정보 -->
        <property name="jdbcUrl" value="jdbc:oracle:thin:@195.168.9.72:1521:xe"></property>
        <property name="username" value="KRK"></property><!-- RDBMS 접속 계정 -->
        <property name="password" value="KRK"></property><!-- RDBMS 접속 계정의 암호 -->
    </bean>
	
<!-- 2. HikariDataSource 클래스를 이용한 dataSource 빈 생성: JDBC 설정이 저장된 HikariConfig 빈 주입받음  -->
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <constructor-arg ref="hikariConfig" />
	   </bean>

</beans>
